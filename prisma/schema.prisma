generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Profile {
  id       String @id @default(uuid())
  userId   String @unique
  name     String
  imageUrl String @db.Text
  email    String

  servers  Server[]
  members  Member[]
  channels Channel[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Server {
  id         String @id @default(uuid())
  name       String
  imageUrl   String @db.Text
  inviteCode String @unique

  profileId String
  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  members  Member[]
  channels Channel[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Member {
  id   String     @id @default(uuid())
  role MemberRole @default(GUEST)

  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)
  profileId String

  server   Server @relation(fields: [serverId], references: [id], onDelete: Cascade)
  serverId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Channel {
  id   String      @id @default(uuid())
  type ChannelType @default(TEXT)
  name String

  server   Server @relation(fields: [serverId], references: [id], onDelete: Cascade)
  serverId String

  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)
  profileId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum MemberRole {
  ADMIN
  MODERATOR
  GUEST
}

enum ChannelType {
  AUDIO
  VIDEO
  TEXT
}
